generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model categories {
  category_id   Int        @id(map: "PK__categori__D54EE9B4137E2CE5") @default(autoincrement())
  category_name String     @db.VarChar(100)
  products      products[]
}

model customers {
  customer_id  Int         @id(map: "PK__customer__CD65CB85FB2B6C48") @default(autoincrement())
  company_name String      @db.VarChar(255)
  abbreviation String      @db.VarChar(50)
  purchases    purchases[]
}

model stores {
  store_id   Int          @id(map: "PK__stores__A2F2A30C5016657C") @default(autoincrement())
  store_name String       @db.VarChar(255)
  store_city String       @db.VarChar(255)
  deliveries deliveries[]
  purchases  purchases[]
}

model deliveries {
  deliveries_id Int      @id(map: "PK__deliveri__9C05E47DC3715B5F") @default(autoincrement())
  product_id    Int
  store_id      Int?
  delivery_date DateTime @db.Date
  product_count Int
  products      products @relation(fields: [product_id], references: [product_id], onUpdate: NoAction, map: "FK__deliverie__produ__7755B73D")
  stores        stores?  @relation(fields: [store_id], references: [store_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__deliverie__store__7849DB76")
}

model manufacturers {
  manufacturer_id   Int        @id(map: "PK__manufact__163F69B0B5332FFA") @default(autoincrement())
  manufacturer_name String     @db.VarChar(100)
  products          products[]
}

model products {
  product_id      Int            @id(map: "PK__products__47027DF5F39AC348") @default(autoincrement())
  product_name    String         @db.VarChar(255)
  manufacturer_id Int?
  category_id     Int?
  deliveries      deliveries[]
  categories      categories?    @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__products__catego__6EC0713C")
  manufacturers   manufacturers? @relation(fields: [manufacturer_id], references: [manufacturer_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__products__manufa__6FB49575")
}

model purchases {
  purchase_id   Int       @id(map: "PK__purchase__87071CB910D1FE77") @default(autoincrement())
  customer_id   Int
  store_id      Int
  purchase_date DateTime  @db.Date
  customers     customers @relation(fields: [customer_id], references: [customer_id], onUpdate: NoAction, map: "FK__purchases__custo__04AFB25B")
  stores        stores    @relation(fields: [store_id], references: [store_id], onUpdate: NoAction, map: "FK__purchases__store__05A3D694")
}